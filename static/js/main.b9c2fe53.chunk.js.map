{"version":3,"sources":["components/Contacts.js","components/Contracts.js","App.js","reportWebVitals.js","index.js"],"names":["Contacts","props","gender","console","log","className","firstName","lastName","phone","contacts","Contracts","state","change","handleSearchChange","e","neededContact","filter","contact","toLowerCase","includes","target","value","setState","search","type","placeholder","this","onChange","map","con","i","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLA0BeA,MAtBf,SAAkBC,GAEf,IAAIC,EASJ,OAVAC,QAAQC,IAAIH,GAGTC,EADkB,SAAjBD,EAAMC,OACE,SACgB,WAAjBD,EAAMC,OACL,SAEA,OAIT,sBAAKG,UAAY,gBAAjB,UACG,8BAAIJ,EAAMK,UAAV,IAAsBL,EAAMM,YAE5B,4BAAIN,EAAMO,QACV,sBAAMH,UAAU,SAAhB,SAA0BH,Q,mCCjB7BO,EAAW,CAAC,CACfH,UAAW,uCACXC,SAAU,2EACVC,MAAO,gBACPN,OAAQ,QACR,CACAI,UAAW,iCACXC,SAAU,+DACVC,MAAO,gBACPN,OAAQ,UACR,CACAI,UAAW,yDACXC,SAAU,mDACVC,MAAO,iBACP,CACAF,UAAW,iCACXC,SAAU,mDACVC,MAAO,gBACPN,OAAQ,UACR,CACAI,UAAW,uCACXC,SAAU,yDACVC,MAAO,gBACPN,OAAQ,QACR,CACAI,UAAW,uCACXC,SAAU,6CACVC,MAAO,gBACPN,OAAQ,SA0BIQ,E,4MAtBZC,MAAQ,CACLF,SAAUA,EACVG,OAAQ,I,EAGXC,mBAAqB,SAAAC,GAClB,IAAMC,EAAgBN,EAASO,QAAO,SAAAC,GAAO,MAAI,UAAIA,EAAQX,UAAZ,YAAyBW,EAAQV,UAAYW,cAAcC,SAASL,EAAEM,OAAOC,MAAMH,gBAChID,EAAQT,MAAOW,SAASL,EAAEM,OAAOC,UACrC,EAAKC,SAAS,CAAEb,SAAUM,IAC1B,EAAKO,SAAS,CAAEC,OAAQT,EAAEM,OAAOC,S,uDAKjC,OACG,sBAAKhB,UAAU,QAAf,UACG,uBAAOmB,KAAK,OAAOC,YAAY,iCAAQJ,MAAOK,KAAKf,MAAMY,OAAQI,SAAUD,KAAKb,qBAChF,4BAAIa,KAAKf,MAAMF,SAASmB,KAAI,SAACC,EAAKC,GAAN,OAAY,cAAC,EAAD,eAAcD,gB,GAlB1CE,aCrBTC,MATf,WACE,OACE,8BAEE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b9c2fe53.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./style.css\"\r\n\r\n\r\nfunction Contacts(props){\r\n   console.log(props)\r\n   let gender\r\n   if (props.gender === \"male\") {\r\n      gender = '\\u2642'\r\n   } else if (props.gender === \"female\") {\r\n      gender = '\\u2640'\r\n   } else {\r\n      gender = '\\u00D7'\r\n   }\r\n\r\n   return (\r\n      <div className = \"contact-block\">\r\n         <p>{props.firstName} {props.lastName}</p>\r\n         \r\n         <p>{props.phone}</p>\r\n         <span className=\"gender\">{gender }</span>\r\n         \r\n      </div>\r\n   )\r\n   \r\n}\r\nexport default Contacts\r\n\r\n\r\n// class AddPost extends Component {\r\n//    state = {\r\n//       text: \"\",\r\n//       name: \"\"\r\n//    }\r\n  \r\n  \r\n//    changeText = e => {\r\n//       this.setState({ text: e.target.value })\r\n//    }\r\n//    changeName = e => {\r\n//       this.setState({ name: e.target.value })\r\n//    }\r\n   \r\n//    addPost = () => {\r\n//       const data = {\r\n//          name: this.state.name,\r\n//          tasks: this.state.text\r\n//       }\r\n//       if (this.state.name !== \"\" && this.state.text !== \"\") {\r\n//          this.props.addDataPost(data)\r\n//          this.setState({ name:\"\",text:\"\"})\r\n//       }\r\n   \r\n//    }\r\n//    render() {\r\n//       return (\r\n//          <div className=\"add-post\">\r\n//             <input type=\"text\" value={this.state.text} onChange = {this.changeText}/>\r\n//             <input type=\"text\" value={this.state.name} onChange={this.changeName}/>\r\n//             <button className='add-post-button' onClick={this.addPost}>Додати</button>\r\n//             {/* <p>{ this.state.text}</p> */}\r\n//          </div>\r\n//       )\r\n//    }\r\n// }\r\n\r\n// export default AddPost","import React, { Component } from 'react'\r\nimport \"./style.css\"\r\nimport Contacts from \"./Contacts\"\r\nconst contacts = [{\r\n   firstName: \"Барней\",\r\n   lastName: \"Стинсовський\",\r\n   phone: \"+380956319521\",\r\n   gender: \"male\"\r\n}, {\r\n   firstName: \"Робін\",\r\n   lastName: \"Щербатська\",\r\n   phone: \"+380931460123\",\r\n   gender: \"female\"\r\n}, {\r\n   firstName: \"Анонімний\",\r\n   lastName: \"Анонімус\",\r\n   phone: \"+380666666666\"\r\n}, {\r\n   firstName: \"Лілія\",\r\n   lastName: \"Олдровна\",\r\n   phone: \"+380504691254\",\r\n   gender: \"female\"\r\n}, {\r\n   firstName: \"Маршен\",\r\n   lastName: \"Еріксонян\",\r\n   phone: \"+380739432123\",\r\n   gender: \"male\"\r\n}, {\r\n   firstName: \"Теодор\",\r\n   lastName: \"Мотсбес\",\r\n   phone: \"+380956319521\",\r\n   gender: \"male\"\r\n}]\r\n\r\nclass Contracts extends Component {\r\n   state = {\r\n      contacts: contacts,\r\n      change: ''\r\n   }\r\n   \r\n   handleSearchChange = e => {\r\n      const neededContact = contacts.filter(contact => (`${contact.firstName} ${contact.lastName}`).toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n         (contact.phone).includes(e.target.value))\r\n      this.setState({ contacts: neededContact })\r\n      this.setState({ search: e.target.value })\r\n      \r\n      \r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"names\">\r\n            <input type=\"text\" placeholder=\"Пошук\" value={this.state.search} onChange={this.handleSearchChange}></input>\r\n            <p>{this.state.contacts.map((con, i) => <Contacts {...con} />)}</p>\r\n      </div>\r\n   )\r\n}\r\n}\r\nexport default Contracts\r\n\r\n\r\n\r\n\r\n\r\n// import TopPanel from \"./TopPanel.js\"\r\n// import AddPost from \"./AddPost.js\"\r\n// import Post from \"./Post\"\r\n\r\n\r\n\r\n// class CreatePostPage extends Component {\r\n//    state = {\r\n//    posts: []\r\n//    }\r\n//    addDataPost = data => {\r\n//       this.setState({ posts: this.state.posts.concat(data) })\r\n//       console.log(this.state.posts)\r\n//    }\r\n//    render() {\r\n//       return (\r\n//          <div>\r\n//             <TopPanel />\r\n//             <AddPost addDataPost = {this.addDataPost} />\r\n//             <div className = 'post'>\r\n//                {this.state.posts.map((post, i) => <Post post={post} />)}\r\n              \r\n//             </div>\r\n            \r\n//          </div>\r\n//       )\r\n//    }\r\n// }\r\n// export default CreatePostPage","\nimport  Contacts  from \"./components/Contacts.js\" \nimport Contracts from './components/Contracts.js'\n\nfunction App() {\n  return (\n    <div>\n      {/* <Contacts name={\"yurii\"} name2={\"ustyn\"} pfone={554554} /> */}\n      <Contracts/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}